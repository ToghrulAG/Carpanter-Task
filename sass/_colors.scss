@each $key, $value in $colors {
  .text-#{$key} {
    color: $value;
  }

  .text-hover-#{$key} {
    a:hover {
      color: $value;
    }
  }

  .bg-#{$key} {
    background-color: $value;
  }

  @if ($value != black and $value != white) {
    // light variations
    @for $i from 1 through 9 {
      .text-#{$key}-light-#{$i} {
        color: mix(white, $value, $i * 10%);
        padding: 0.5rem;
      }
      .bg-#{$key}-light-#{$i} {
        background-color: mix(white, $value, $i * 10%);
      }
    }

    // dark variations
    @for $i from 1 through 9 {
      .text-#{$key}-dark-#{$i} {
        color: mix(black, $value, $i * 10%);
      }
      .bg-#{$key}-dark-#{$i} {
        background-color: mix(black, $value, $i * 10%);
      }
    }
  }
}

// @each $key, $value in $colors {
//     .btn-#{$key} {
//       text-decoration: none;
//       cursor: pointer;
//       display: inline-block;
//       border: 0;
//       padding: $base-padding $base-padding * 2;
//       border-radius: $base-border-radius;
//       background-color: $value;
//     }

//     .btn-outlined-#{key} {
//       text-decoration: none;
//       cursor: pointer;
//       display: inline-block;
//       border: 0;
//       padding: $base-padding $base-padding * 2;
//       border-radius: $base-border-radius;
//       background-color: #fff;
//       border: $base-border-thickness solid $value;
//     }
//   }

// @mixin btn($bg-color: #e2e2e2) {
//   text-decoration: none;
//   cursor: pointer;
//   display: inline-block;
//   border: 0;
//   padding: $base-padding $base-padding * 2;
//   border-radius: $base-border-radius;
//   background-color: $bg-color;
// }

// .btn {
//   @include btn;
// }

// @each $key, $value in $colors {
//   .btn-#{$key} {
//     @include btn($value);

//     &:hover {
//       background-color: lighten($value, 5);
//     }
//   }

//   .btn-outlined-#{$key} {
//     @include btn(#fff);
//     border: $base-border-thickness solid $value;

//     &:hover {
//       background-color: $value;
//     }
//   }
// }
